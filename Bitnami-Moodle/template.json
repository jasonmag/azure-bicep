{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "networkInterfaceName1": {
            "type": "String"
        },
        "networkInterfaceName2": {
            "type": "String"
        },
        "networkSecurityGroupName": {
            "type": "String"
        },
        "networkSecurityGroupRules": {
            "type": "Array"
        },
        "subnetName": {
            "type": "String"
        },
        "virtualNetworkName": {
            "type": "String"
        },
        "addressPrefixes": {
            "type": "Array"
        },
        "subnets": {
            "type": "Array"
        },
        "publicIpAddressName1": {
            "type": "String"
        },
        "publicIpAddressType": {
            "type": "String"
        },
        "publicIpAddressSku": {
            "type": "String"
        },
        "pipDeleteOption": {
            "type": "String"
        },
        "virtualMachineName": {
            "type": "String"
        },
        "virtualMachineName1": {
            "type": "String"
        },
        "virtualMachineComputerName1": {
            "type": "String"
        },
        "virtualMachineRG": {
            "type": "String"
        },
        "osDiskType": {
            "type": "String"
        },
        "osDiskDeleteOption": {
            "type": "String"
        },
        "virtualMachineSize": {
            "type": "String"
        },
        "nicDeleteOption": {
            "type": "String"
        },
        "hibernationEnabled": {
            "type": "Bool"
        },
        "adminUsername": {
            "type": "String"
        },
        "adminPublicKey": {
            "type": "SecureString"
        },
        "virtualMachineName2": {
            "type": "String"
        },
        "virtualMachineComputerName2": {
            "type": "String"
        },
        "virtualMachine1Zone": {
            "type": "String"
        },
        "virtualMachine2Zone": {
            "type": "String"
        },
        "healthExtensionProtocol": {
            "type": "String"
        },
        "healthExtensionPort": {
            "type": "Int"
        },
        "healthExtensionRequestPath": {
            "type": "String"
        },
        "loadBalancerName": {
            "type": "String"
        },
        "loadbalancingRuleFrontEndPort": {
            "type": "Int"
        },
        "loadbalancingRuleBackendEndPort": {
            "type": "Int"
        },
        "loadbalancingRuleProtocol": {
            "type": "String"
        },
        "InboundNATRuleFrontEndPortRangeStart": {
            "type": "Int"
        }
    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetName": "[parameters('virtualNetworkName')]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "instanceCount": "2"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkInterfaceName1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]",
                "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
            ],
            "tags": {
                "project": "positivum"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]",
                                "properties": {
                                    "deleteOption": "[parameters('pipDeleteOption')]"
                                }
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), concat(take(parameters('loadBalancerName'), sub(80, length('-backendpool01'))), '-backendpool01'))]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkInterfaceName2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
            ],
            "tags": {
                "project": "positivum"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), concat(take(parameters('loadBalancerName'), sub(80, length('-backendpool01'))), '-backendpool01'))]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "tags": {
                "project": "positivum"
            },
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "tags": {
                "project": "positivum"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[parameters('publicIpAddressName1')]",
            "location": "[parameters('location')]",
            "tags": {
                "project": "positivum"
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualMachineName1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName1'))]"
            ],
            "tags": {
                "project": "positivum"
            },
            "zones": [
                "[parameters('virtualMachine1Zone')]"
            ],
            "plan": {
                "name": "3-0",
                "publisher": "bitnami",
                "product": "moodle"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "publisher": "bitnami",
                        "offer": "moodle",
                        "sku": "3-0",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName1'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "securityProfile": {},
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualMachineName2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName2'))]"
            ],
            "tags": {
                "project": "positivum"
            },
            "zones": [
                "[parameters('virtualMachine2Zone')]"
            ],
            "plan": {
                "name": "3-0",
                "publisher": "bitnami",
                "product": "moodle"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "publisher": "bitnami",
                        "offer": "moodle",
                        "sku": "3-0",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName2'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "securityProfile": {},
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName2')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('loadBalancerName'), '-publicip')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "zones": [
                "1",
                "2"
            ],
            "properties": {
                "publicIpAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 15
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2021-05-01",
            "name": "[parameters('loadBalancerName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', concat(parameters('loadBalancerName'), '-publicip'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[concat(take(parameters('loadBalancerName'), sub(80, length('-frontendconfig01'))), '-frontendconfig01')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', concat(parameters('loadBalancerName'), '-publicip'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat(take(parameters('loadBalancerName'), sub(80, length('-backendpool01'))), '-backendpool01')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-lbrule01')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(take(parameters('loadBalancerName'), sub(80, length('-frontendconfig01'))), '-frontendconfig01'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), concat(take(parameters('loadBalancerName'), sub(80, length('-backendpool01'))), '-backendpool01'))]"
                            },
                            "frontendPort": "[parameters('loadbalancingRuleFrontEndPort')]",
                            "backendPort": "[parameters('loadbalancingRuleBackendEndPort')]",
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 15,
                            "disableOutboundSnat": true,
                            "loadDistribution": "Default",
                            "protocol": "[parameters('loadbalancingRuleProtocol')]",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), concat(parameters('loadBalancerName'), '-probe01'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-probe01')]",
                        "properties": {
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2,
                            "requestPath": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), json('null'), '/')]",
                            "port": "[if(equals(parameters('loadbalancingRuleProtocol'), 'Tcp'), parameters('loadbalancingRuleBackendEndPort'), '80')]",
                            "protocol": "[if(equals(parameters('loadbalancingRuleProtocol'),'Tcp'), 'Tcp', 'Http')]"
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[concat(parameters('loadBalancerName'), '-natRule01')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), concat(take(parameters('loadBalancerName'), sub(80, length('-frontendconfig01'))), '-frontendconfig01'))]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), concat(take(parameters('loadBalancerName'), sub(80, length('-backendpool01'))), '-backendpool01'))]"
                            },
                            "protocol": "TCP",
                            "enableFloatingIP": false,
                            "enableTcpReset": false,
                            "backendPort": 22,
                            "frontendPortRangeStart": "[parameters('InboundNATRuleFrontEndPortRangeStart')]",
                            "frontendPortRangeEnd": "[add(parameters('InboundNATRuleFrontEndPortRangeStart'), if(equals(variables('instanceCount'), json('null')), 0, 3599))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualMachineName1'),'/HealthExtension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName2'))]"
            ],
            "tags": {
                "project": "positivum"
            },
            "properties": {
                "publisher": "Microsoft.ManagedServices",
                "type": "ApplicationHealthLinux",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": false,
                "settings": {
                    "protocol": "[parameters('healthExtensionProtocol')]",
                    "port": "[parameters('healthExtensionPort')]",
                    "requestPath": "[parameters('healthExtensionRequestPath')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualMachineName2'),'/HealthExtension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName1'),'/extensions/HealthExtension')]"
            ],
            "tags": {
                "project": "positivum"
            },
            "properties": {
                "publisher": "Microsoft.ManagedServices",
                "type": "ApplicationHealthLinux",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": false,
                "settings": {
                    "protocol": "[parameters('healthExtensionProtocol')]",
                    "port": "[parameters('healthExtensionPort')]",
                    "requestPath": "[parameters('healthExtensionRequestPath')]"
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}